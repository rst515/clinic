# Generated by Django 4.0.5 on 2022-06-18 13:29

import colorful.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('reolCol', colorful.fields.RGBColorField(colors=['#2A6CAA', '#2aaa68', '#aa2a2c'])),
                ('group', models.CharField(choices=[('S', 'Staff'), ('P', 'Patient')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('staff', 'View/edit all pateint data (staff)'), ('patient', 'View own patient data only (patients)')),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment', models.DateTimeField()),
                ('duration', models.DurationField(default='00:30:00')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scheduled_staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('TM', 'Transgender Male'), ('TF', 'Transgender Female'), ('O', 'Other')], max_length=2)),
                ('appointments', models.ManyToManyField(blank=True, related_name='patient_appointments', to='mis.appointment')),
                ('clinicians', models.ManyToManyField(related_name='related_clinicians', to=settings.AUTH_USER_MODEL)),
                ('medications', models.ManyToManyField(to='mis.medication')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_Patient_user', to=settings.AUTH_USER_MODEL)),
                ('notes', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='patient_notes', to='mis.note')),
            ],
        ),
        migrations.AddField(
            model_name='note',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patient_details', to='mis.patient'),
        ),
        migrations.AddField(
            model_name='note',
            name='recorded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='staff_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Clinician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_room', models.CharField(blank=True, choices=[('01', 'Room 1'), ('02', 'Room 2'), ('03', 'Room 3'), ('04', 'Room 4'), ('05', 'Room 5')], max_length=2)),
                ('appointments', models.ManyToManyField(blank=True, related_name='clinician_appointments', to='mis.appointment')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_Clinician_user', to=settings.AUTH_USER_MODEL)),
                ('patients', models.ManyToManyField(blank=True, related_name='clinician_patients', to='mis.patient')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='notes',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='appointment_notes', to='mis.note'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scheduled_patient', to='mis.patient'),
        ),
    ]
